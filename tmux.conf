# https://github.com/tmux-plugins/tpm/pull/115/files - Only relevant for macos
# set-environment -g PATH "/usr/local/bin:/bin:/usr/bin" 

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Set alt-m to be the leader key.
unbind C-b
set-option -g prefix M-m
bind-key M-m send-prefix

# Enable mouse scrolling
set-option -g mouse on

# Mode vi
setw -g mode-keys vi

# press r to reload tmux
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Copy mode overrides
bind-key 'v' copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'V' send -X select-line
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -in -selection clipboard" # In future could use this plugin rather: https://github.com/tmux-plugins/tmux-yank

# Export session output to file
bind-key P command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

# disable desconnection session
unbind 'C-z'

# Resize panes with C-hjkl
bind-key -r -T prefix       C-k           resize-pane -U
bind-key -r -T prefix       C-j           resize-pane -D
bind-key -r -T prefix       C-h           resize-pane -L
bind-key -r -T prefix       C-l           resize-pane -R

# Override default bindings
unbind '"'
unbind '%'
unbind 'c'
bind-key '"' split-window -c '#{pane_current_path}'
bind-key '%' split-window -h -c '#{pane_current_path}'
bind-key 'c' new-window -c '#{pane_current_path}'


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

# # Use HJKL to move between panes
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
# Smart pane switching with awareness of Vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n "C-\\" if-shell "$is_vim" "send-keys C-\\" "select-pane -l" # Go to previously selected pane

# status bar
set -g status-bg colour232 # black
set -g status-fg white
set -g status-interval 60  # update status every minute
set -g status-left-length 90
set -g status-right-length 100
# set -g status-left '#[fg=green,bright]#(gitmux #{pane_current_path})' #gitmux doesn't seem to work for me :/
set -g status-right "#{prefix_highlight} | #(/bin/bash $HOME/.tmux/kube-tmux/kube.tmux 250 red cyan)"

# Make it easy to kill a pane:
unbind-key x               # unbind-key “x” from it’s current job of “ask and then close”
bind-key x kill-pane       # rebind-key it to just “close”
bind-key X kill-session    # key combo for killing the entire session - <prefix> + shift + x

# Install tmux-thumbs: https://github.com/fcsonline/tmux-thumbs
set -g @plugin 'fcsonline/tmux-thumbs'
run-shell ~/.tmux/plugins/tmux-thumbs/tmux-thumbs.tmux
set -g @thumbs-alphabet dvorak-homerow # Make it easier for me
set -g @thumbs-command 'echo -n {} | xclip -in -selection clipboard'

# https://github.com/schasse/tmux-jump
set -g @plugin 'schasse/tmux-jump'
set -g @jump-key 's' # readme says that `j` is the default key, but 's' seems to be what works.

# To take ASCII screenshots (tmux-resurrect uses C-s for saving, here binding to Alt-s ) .
#   create the dir for storing screenshots
bind-key M-s run "tmux capture-pane; tmux save-buffer ~/.mytmux/pane_screenshots/\"$(date +%FT%T)\".screenshots"

# URL Launcher
#bind-key o run-shell -b "tmux capture-pane -J -p | grep -oE '(https?):\/\/.*[^>]' | fzf-tmux --multi --bind alt-a:select-all,alt-d:deselect-all | xargs xdg-open"
#bind-key o run-shell -b "tmux capture-pane -J -p | grep -oE '(https?):\/\/.*[^>]' | uniq | fzf-tmux --multi --bind alt-a:select-all,alt-d:deselect-all | xargs xdg-open"
# This does the same thing as the above custom command...
# set -g @plugin 'tmux-plugins/tmux-urlview'
set -g @plugin 'artemave/tmux_super_fingers'
set -g @super-fingers-key f

set -g @plugin 'tmux-plugins/tmux-sensible'

# open in browser in copy mode with `shift+s` (or o or ctl+o) https://github.com/tmux-plugins/tmux-open
set -g @plugin 'tmux-plugins/tmux-open'
set -g @open-S 'https://www.google.com/search?q='

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_bg 'blue'  # default is 'colour04'

# resurrect key bindings:
#   prefix + Ctrl-s - save
#   prefix + Ctrl-r - restore
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Last saved environment is automatically restored when tmux is started.
set -g @continuum-boot 'on'

# terminal window will go fullscreen
set -g @continuum-boot-options 'fullscreen'

## Hyperkey bindings

### Note: I've configured my alacritty config to turn <hyper>-<key> into a unicode character, thus allowing me to bind to things in tmux directly (without a mode change)

# Mode vi
bind-key -n "ű" copy-mode

# # Override default bindings
bind-key -n "ǅ" split-window -c '#{pane_current_path}'
bind-key -n "ǆ" split-window -h -c '#{pane_current_path}'
bind-key -n "Ǆ" new-window -c '#{pane_current_path}'

# Use HJKL to move between panes
bind-key -n "ǈ" select-pane -L
bind-key -n "ǉ" select-pane -D
bind-key -n "Ǌ" select-pane -U
bind-key -n "ǋ" select-pane -R

# # Resize panes
bind-key -n "ǌ" resize-pane -L
bind-key -n "Ǎ" resize-pane -D
bind-key -n "Ǖ" resize-pane -U
bind-key -n "ǖ" resize-pane -R

# Use specific Unicode characters to switch between windows
bind-key -n "Ǘ" previous-window
bind-key -n "ǘ" next-window

# Select windows easily with numbers
bind-key -n "M-0" select-window -t 0
bind-key -n "M-1" select-window -t 1
bind-key -n "M-2" select-window -t 2
bind-key -n "M-3" select-window -t 3
bind-key -n "M-4" select-window -t 4
bind-key -n "M-5" select-window -t 5
bind-key -n "M-6" select-window -t 6
bind-key -n "M-7" select-window -t 7
bind-key -n "M-8" select-window -t 8
bind-key -n "M-9" select-window -t 9

